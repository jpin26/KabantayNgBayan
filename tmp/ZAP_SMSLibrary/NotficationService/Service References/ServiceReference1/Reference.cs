//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NotficationService.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RegisterMerchant", ReplyAction="http://tempuri.org/IService1/RegisterMerchantResponse")]
        string RegisterMerchant(string merchantReferenceNumber, string merchantMobile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RegisterMerchant", ReplyAction="http://tempuri.org/IService1/RegisterMerchantResponse")]
        System.Threading.Tasks.Task<string> RegisterMerchantAsync(string merchantReferenceNumber, string merchantMobile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ConfirmRegistration", ReplyAction="http://tempuri.org/IService1/ConfirmRegistrationResponse")]
        string ConfirmRegistration(string merchantReferenceNumber, string merchantMobile, string confirmationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ConfirmRegistration", ReplyAction="http://tempuri.org/IService1/ConfirmRegistrationResponse")]
        System.Threading.Tasks.Task<string> ConfirmRegistrationAsync(string merchantReferenceNumber, string merchantMobile, string confirmationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMerchantIds", ReplyAction="http://tempuri.org/IService1/GetMerchantIdsResponse")]
        string GetMerchantIds();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMerchantIds", ReplyAction="http://tempuri.org/IService1/GetMerchantIdsResponse")]
        System.Threading.Tasks.Task<string> GetMerchantIdsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SendSMSNotification", ReplyAction="http://tempuri.org/IService1/SendSMSNotificationResponse")]
        string SendSMSNotification(string merchantReferenceNumber, string type, string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SendSMSNotification", ReplyAction="http://tempuri.org/IService1/SendSMSNotificationResponse")]
        System.Threading.Tasks.Task<string> SendSMSNotificationAsync(string merchantReferenceNumber, string type, string title);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : NotficationService.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<NotficationService.ServiceReference1.IService1>, NotficationService.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string RegisterMerchant(string merchantReferenceNumber, string merchantMobile) {
            return base.Channel.RegisterMerchant(merchantReferenceNumber, merchantMobile);
        }
        
        public System.Threading.Tasks.Task<string> RegisterMerchantAsync(string merchantReferenceNumber, string merchantMobile) {
            return base.Channel.RegisterMerchantAsync(merchantReferenceNumber, merchantMobile);
        }
        
        public string ConfirmRegistration(string merchantReferenceNumber, string merchantMobile, string confirmationCode) {
            return base.Channel.ConfirmRegistration(merchantReferenceNumber, merchantMobile, confirmationCode);
        }
        
        public System.Threading.Tasks.Task<string> ConfirmRegistrationAsync(string merchantReferenceNumber, string merchantMobile, string confirmationCode) {
            return base.Channel.ConfirmRegistrationAsync(merchantReferenceNumber, merchantMobile, confirmationCode);
        }
        
        public string GetMerchantIds() {
            return base.Channel.GetMerchantIds();
        }
        
        public System.Threading.Tasks.Task<string> GetMerchantIdsAsync() {
            return base.Channel.GetMerchantIdsAsync();
        }
        
        public string SendSMSNotification(string merchantReferenceNumber, string type, string title) {
            return base.Channel.SendSMSNotification(merchantReferenceNumber, type, title);
        }
        
        public System.Threading.Tasks.Task<string> SendSMSNotificationAsync(string merchantReferenceNumber, string type, string title) {
            return base.Channel.SendSMSNotificationAsync(merchantReferenceNumber, type, title);
        }
    }
}
